---
title: Report on a payment
last_reviewed_on: 2020-06-29
review_in: 6 months
weight: 60
---

# Report on a payment

You can extract reporting information from GOV.UK Pay manually or through the
API, for each service you have set up in GOV.UK Pay.

You can also read about [refunding payments](/refunding_payments/), including
how to [search for refunds using the GOV.UK Pay API](/refunding_payments/#searching-refunds).

## Manual reporting

You can use your [GOV.UK Pay admin
account](https://selfservice.payments.service.gov.uk/login) to export
transaction information in a CSV file.

You can export one file for one service's transactions, or one file for all your services' transactions.

1. Go to [My Services](https://selfservice.payments.service.gov.uk/my-services).

1. If you want to export one service's transactions, select the service account you want reporting information for and go to the [transactions](https://selfservice.payments.service.gov.uk/transactions) list.

    Select __View transactions for all live services__ if you want to export all your services' transactions.

1. Filter transactions using the available search criteria if needed.

1. Select __Download all transaction details as a CSV file__.

    If you have more than 5000 transactions, you must apply a filter before the CSV file download link appears.

The CSV file contains all transaction data, which is much more comprehensive than the information on the __Transactions__ page.

You can process CSV files using spreadsheet software and edit the contents you do not need.

## Reporting via the GOV.UK Pay API

Before reading this section, you should be familiar with [making
payments](/making_payments).

You can get data from the GOV.UK Pay API in a format suitable for automatic
processing. For example, you could develop software to query the GOV.UK Pay
API for payment data periodically and import the data into your finance
system. This could remove routine manual operations from your workflow and
lead to significant cost savings for your organisation.

You can use the GOV.UK Pay API to:

* get information about a single payment
* get a payment's events
* generate a list of payments matching search criteria

## Get information about a single payment

`GET /v1/payments/{paymentId}`

See the <a href="https://govukpay-api-browser.cloudapps.digital/#getpayment" target="blank">GOV.UK Pay API browser</a> for more details

If the payment exists, the JSON response body to this
API call contains a `"state"` field. You can use this information when
designing a service.

For example, the response for a successful payment contains:

```JSON
"state": {
  "status": "success",
  "finished": true
},
```

With a successful payment, you know that your user can continue their journey
through your service.

For a valid request, the JSON response body to this API call also contains
other useful information. For example, if your user has gone far enough in their
payment journey, the `"card_details"` section contains information that they
have entered when making a payment:

```JSON
"card_details": {
  "card_type": "debit",
  "card_brand": "visa",
  "last_digits_card_number": "1111",
  "first_digits_card_number": "100002",
  "cardholder_name": "Sherlock Holmes",
  "expiry_date": "12/21",
  "billing_address": {
    "line1": "221 Baker Street",
    "line2": "Flat b",
    "postcode": "NW16XE",
    "city": "London",
    "country": "GB"
  }
}
```

The `card_type` is `null` if we did not recognise which type of card your user made the payment with.

### Checking when your Payment Service Provider (PSP) took a payment

You can see when your PSP took a payment from your user's account.

The response contains:

- `capture_submit_time` if we've asked your PSP to take the payment from your user's account
- `captured_date` if your PSP has taken the payment

For example:

```JSON
"settlement_summary": {
  "capture_submit_time": "2016-01-21T17:15:000Z",
  "captured_date": "2016-01-21"
}
```

If your PSP is Stripe, you should receive the payment in your bank account within:

- 2 working days of `captured_date` if your user completed their payment during the week
- 3 working days of `captured_date` if your user completed their payment at the weekend or on a bank holiday

You can confirm when payments are paid into your bank account by signing in to the [GOV.UK Pay admin tool](https://selfservice.payments.service.gov.uk/login) and going to __My Services__ > __View payments to your bank account__.

If your PSP is Government Banking’s contracted PSP (currently Worldpay), SmartPay or ePDQ, contact your PSP to find out your payment times.

### PSP fees

If you use GOV.UK's Payment Service Provider (PSP), we'll automatically deduct the PSP's transaction fee from each payment. You can see how much the fee was when you make the API call to get information about a payment.

Example response:

```JSON
"total_amount": 4000,
"fee": 200,
"net_amount": 3800
```

Where:

- `total_amount` is the amount your user paid in pence, including a [corporate card surcharge](/corporate_card_surcharges/#add-corporate-card-fees) if you added one
- `fee` is the PSP transaction fee that we took from the amount your user paid, in pence
- `net_amount` is the amount that will be paid into your account, in pence

The response will not contain a `fee` or `net_amount` parameter if either:

- your PSP is SmartPay, Worldpay or ePDQ - we do not deduct these PSPs' transaction fees
- you're [using a test API key](/quick_start_guide/#test-the-api) - we do not deduct fees from test payments

You can also sign in to the [GOV.UK Pay admin tool](https://selfservice.payments.service.gov.uk/login) to see transaction fee information or export the information in a CSV file.

## Get a payment’s events

Use the following API call to get a list of a payment’s events:

`GET /v1/payments/{paymentId}/events`

The API will respond with an `events` object. For each change to the payment's state, the `events` object includes:

- when the `state` changed
- what the `state` was updated to

The response starts with the oldest `state`.

For example:

```JSON
{
    "events": [
        {
            "payment_id": "9co6rdsak0btz4wuxac0a29i4a",
            "state": {
                "status": "created",
                "finished": false
            },
            "updated": "2019-07-11T10:36:26.988Z",
        },
        {
            "payment_id": "9co6rdsak0btz4wuxac0a29i4a",
            "state": {
                "status": "failed",
                "finished": true,
                "message": "Payment expired",
                "code": "P0020"
            },
            "updated": "2019-07-11T12:11:35.849Z",
        }
    ],
}
```

## Search payments

`GET /v1/payments`

See the <a href="https://govukpay-api-browser.cloudapps.digital/#searchpayments" target="blank">GOV.UK Pay API browser</a> for more details.

Do not search payments using the API to check a payment's status during [payment flow](/payment_flow). The payment status field in the search results does not immediately update and so may not be up to date.

### Search criteria

An example search request:

`GET
/v1/payments?from_date=2018-10-01T13:30:00Z&to_date=2018-10-14T15:00:00Z&reference=12345&state=success`

Some of the query parameters you can use to search for payments are:

* `reference` - case insensitive, exact match only
* `email` - case insensitive
* `cardholder_name` - case insensitive
* `state` - case sensitive, exact match only
* `first_digits_card_number` - exact match only
* `last_digits_card_number` - exact match only

If you search for a specific payment, all criteria you use must match. Otherwise, that payment will not be returned in the results.

If your request has no query parameters, the API will return all payments.

#### Search by card brand


|`card_brand` to search for|`card_brand` in API response|
|---|---|
|`visa`|`Visa`|
|`master-card`|`Mastercard`|
|`maestro`|`Maestro`|
|`american-express`|`American Express`|
|`diners-club`|`Diners Club`|
|`discover`|`Discover`|
|`jcb`|`Jcb`|
|`unionpay`|`Union Pay`|

`card_brand` is case insensitive. You cannot search for partial values of `card_brand`.

#### Filter by date

You can use the following query parameters to filter payments by date:

* `from_date` - the start date for payments to be searched, inclusive
* `to_date` - the end date for payments to be searched, exclusive

These take inputs based on a subset of [the ISO
8601 standard](https://www.gov.uk/government/publications/open-standards-for-government/date-times-and-time-stamps-standard).
For example, a valid input would be `2015-08-13T12:35:00Z`.

#### Filter payments by when your PSP sent payments to your bank account

If your PSP is Stripe, you can use the following query parameters to filter by [when your PSP sent payments to your bank account](/reporting/#checking-when-your-payment-service-provider-psp-took-a-payment):

- `from_settled_date` - the start date for payments to be searched, inclusive
- `to_settled_date` - the end date for payments to be searched, inclusive

All dates are in Coordinated Universal Time (UTC).

For example, to list all the payments your PSP sent to you on 16 June 2020:

```
GET /v1/payments?from_settled_date=2020-06-16&to_settled_date=2020-06-16
```

These query parameters take inputs based on a subset of the [ISO 8601 standard](https://www.gov.uk/government/publications/open-standards-for-government/date-times-and-time-stamps-standard). For example, a valid input would be `2015-08-13`.

If your PSP has not sent this payment to your bank account yet, the payment will not be in the response.

#### Pagination

You can use the following query parameters for pagination:

* `display_size` - default, and maximum, is `500`
* `page` - default is `1`

These must be a positive integer. For example, for the following search:

`GET
/v1/payments?from_date=2018-10-01T13:30:00Z&to_date=2018-10-14T15:00:00Z`

If there were 1543 payments in the response, you could paginate this as follows:

`GET
/v1/payments?from_date=2018-10-01T13:30:00Z&to_date=2018-10-14T15:00:00Z&display_size=500&page=2`

This would return payments 501-1000.
